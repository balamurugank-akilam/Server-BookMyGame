"""
Django settings for bookmygame project.

Generated by 'django-admin startproject' using Django 5.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path
import datetime
import os
# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-tjkus#xeo4!pvb(k!uwku3_c^9y@*g=fg0u32qupz-%=a*pz&f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

# # SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = 'django-insecure-tjkus#xeo4!pvb(k!uwku3_c^9y@*g=fg0u32qupz-%=a*pz&f'

# Application definition

INSTALLED_APPS = [
    'jazzmin',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'api','CourtBooking',
    "rest_framework",
     'corsheaders',
    #  "rest_framework.authtoken",

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    # 'yourapp.middleware.JWTAuthenticationMiddleware',
]
CORS_ALLOW_ALL_ORIGINS = True
ROOT_URLCONF = 'bookmygame.urls'
ALLOWED_HOSTS = ['*']
# settings.py
import datetime

# JWT Configuration
JWT_ACCESS_TOKEN_LIFETIME = datetime.MAXYEAR  # Token expires in 24 hours

# # REST Framework Configuration
# REST_FRAMEWORK = {
#     'DEFAULT_AUTHENTICATION_CLASSES': [
#         'api.authentication.CustomJWTAuthentication',
#     ],
#     'DEFAULT_PERMISSION_CLASSES': [
#         'rest_framework.permissions.IsAuthenticated',
#     ],
# }

# settings.py



SECRET_KEY = 'your_secret_key_here'

JWT_ACCESS_TOKEN_LIFETIME = datetime.timedelta()  # Token valid for 60 mins

# AUTH_USER_MODEL = 'api.User' 
SIMPLE_JWT = {
    # 'ACCESS_TOKEN_LIFETIME': timedelta(minutes=60),  # access token validity duration
    # 'REFRESH_TOKEN_LIFETIME': timedelta(days=7),    # refresh token validity duration
    'ROTATE_REFRESH_TOKENS': True,                   # if True, refresh token is rotated on refresh
    'BLACKLIST_AFTER_ROTATION': True,                # blacklist old refresh tokens after rotation

    'ALGORITHM': 'HS256',                            # signing algorithm
    'SIGNING_KEY': SECRET_KEY,              # secret key used to sign tokens
    'VERIFYING_KEY': None,
    'AUDIENCE': None,
    'ISSUER': None,
    'JWK_URL': None,
    'LEEWAY': 0,

    'AUTH_HEADER_TYPES': ('Bearer',),                # prefix for Authorization header token
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',

    'USER_ID_FIELD': 'reg_id',                        # your custom user unique identifier field
    'USER_ID_CLAIM': 'reg_id',                        # claim name in JWT for user ID

    'USER_AUTHENTICATION_RULE': 'rest_framework_simplejwt.authentication.default_user_authentication_rule',

    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'TOKEN_USER_CLASS': 'rest_framework_simplejwt.models.TokenUser',

    'JTI_CLAIM': 'jti',

    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
  
}



TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'bookmygame.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }

DATABASES = {
    'default': {
        'ENGINE': 'mssql',
        'NAME': 'BookingMyGame',
        'USER': 'sa',
        'PASSWORD': 'prime_123$',
        'HOST': '103.185.75.196',
        #'HOST': 'akilam-server',# or server\instance_name
        'PORT': '1433',

        'OPTIONS': {
            'driver': 'ODBC Driver 18 for SQL Server',  # or "ODBC Driver 18 for SQL Server"
            'extra_params': 'TrustServerCertificate=yes;'  # sometimes needed for SSL
        },
    }
}



# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'


BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# For static files (CSS, JS, images used by Django)
STATIC_URL = '/static/'

MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'

MEDIA_ROOT = os.path.join(BASE_DIR, 'media')


# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
